{"version":3,"file":"static/js/633.010abb01.chunk.js","mappings":"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","sources":["app/components/MatxDivider.jsx","app/views/sessions/login/FirebaseLogin.jsx"],"sourcesContent":["import { Box, styled } from \"@mui/material\";\r\n\r\nconst DividerRoot = styled(Box)(({ theme }) => ({\r\n  textAlign: \"center\",\r\n  position: \"relative\",\r\n  height: 16,\r\n  \"&::after\": {\r\n    left: 0,\r\n    zIndex: 1,\r\n    top: \"10px\",\r\n    content: '\"\"',\r\n    width: \"100%\",\r\n    height: \"1px\",\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.divider\r\n  },\r\n  \"& span\": {\r\n    zIndex: 5,\r\n    background: \"#fff\",\r\n    padding: \"4px 6px\",\r\n    position: \"relative\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\nexport default function MatxDivider({ text, sx }) {\r\n  return (\r\n    <div>\r\n      <DividerRoot sx={sx}>{text && <span>{text}</span>}</DividerRoot>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { NavLink, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Box, Button, Card, Grid, styled, TextField, useTheme, Checkbox } from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n// GLOBAL CUSTOM COMPONENTS\r\nimport MatxLogo from \"app/components/MatxLogo\";\r\nimport MatxDivider from \"app/components/MatxDivider\";\r\nimport { Paragraph, Span } from \"app/components/Typography\";\r\n// GLOBAL CUSTOM HOOKS\r\nimport useAuth from \"app/hooks/useAuth\";\r\n\r\n// STYLED COMPONENTS\r\nconst GoogleButton = styled(Button)(({ theme }) => ({\r\n  color: \"rgba(0, 0, 0, 0.87)\",\r\n  boxShadow: theme.shadows[0],\r\n  backgroundColor: \"#e0e0e0\",\r\n  \"&:hover\": { backgroundColor: \"#d5d5d5\" }\r\n}));\r\n\r\nconst FlexBox = styled(Box)({\r\n  display: \"flex\"\r\n});\r\n\r\nconst Logo = styled(\"div\")({\r\n  gap: 10,\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  \"& span\": { fontSize: 26, lineHeight: 1.3, fontWeight: 800 }\r\n});\r\n\r\nconst FirebaseRoot = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  background: \"#1A2038\",\r\n  minHeight: \"100vh !important\",\r\n  \"& .card\": { maxWidth: 800, margin: \"1rem\" },\r\n  \"& .cardLeft\": {\r\n    color: \"#fff\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    padding: \"32px 56px\",\r\n    flexDirection: \"column\",\r\n    backgroundSize: \"cover\",\r\n    background: \"#161c37 url(/assets/images/bg-3.png) no-repeat\",\r\n    [theme.breakpoints.down(\"sm\")]: { minWidth: 200 },\r\n    \"& img\": { width: 32, height: 32 }\r\n  },\r\n  \"& .mainTitle\": { fontSize: 18, lineHeight: 1.3, marginBottom: 24 },\r\n  \"& .features\": {\r\n    \"& .item\": {\r\n      position: \"relative\",\r\n      marginBottom: 12,\r\n      paddingLeft: 16,\r\n      \"&::after\": {\r\n        top: 8,\r\n        left: 0,\r\n        width: 4,\r\n        height: 4,\r\n        content: '\"\"',\r\n        borderRadius: 4,\r\n        position: \"absolute\",\r\n        backgroundColor: theme.palette.error.main\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\n// initial login credentials\r\nconst initialValues = {\r\n  email: \"jason@ui-lib.com\",\r\n  password: \"dummyPass\",\r\n  remember: true\r\n};\r\n\r\n// form field validation schema\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(6, \"Password must be 6 character length\")\r\n    .required(\"Password is required!\"),\r\n  email: Yup.string().email(\"Invalid Email address\").required(\"Email is required!\")\r\n});\r\n\r\nexport default function FirebaseLogin() {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const { state } = useLocation();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { signInWithEmail, signInWithGoogle } = useAuth();\r\n\r\n  const handleFormSubmit = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      await signInWithEmail(values.email, values.password);\r\n      navigate(state ? state.from : \"/\");\r\n      enqueueSnackbar(\"Logged In Successfully\", { variant: \"success\" });\r\n    } catch (error) {\r\n      enqueueSnackbar(error.message, { variant: \"error\" });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      await signInWithGoogle();\r\n      navigate(\"/\");\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FirebaseRoot>\r\n      <Card className=\"card\">\r\n        <Grid container>\r\n          <Grid item sm={6} xs={12}>\r\n            <div className=\"cardLeft\">\r\n              <Logo>\r\n                <MatxLogo /> <span>MatX Pro</span>\r\n              </Logo>\r\n\r\n              <h1 className=\"mainTitle\">Admin Dashboard</h1>\r\n\r\n              <div className=\"features\">\r\n                <div className=\"item\">JWT, Firebase & Auth0 Authentication</div>\r\n                <div className=\"item\">Clean & Organised code</div>\r\n                <div className=\"item\">Limitless Pages & Components</div>\r\n              </div>\r\n\r\n              <Span flexGrow={1}></Span>\r\n\r\n              <a href=\"https://ui-lib.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <img src=\"/assets/images/logos/ui-lib.png\" alt=\"UI Lib Logo\" />\r\n              </a>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <Box px={4} pt={4}>\r\n              <GoogleButton\r\n                fullWidth\r\n                variant=\"contained\"\r\n                onClick={handleGoogleLogin}\r\n                startIcon={<img src=\"/assets/images/logos/google.svg\" alt=\"google\" />}>\r\n                Sign In With Google\r\n              </GoogleButton>\r\n            </Box>\r\n\r\n            <MatxDivider sx={{ mt: 3, px: 4 }} text=\"Or\" />\r\n\r\n            <Box p={4}>\r\n              <Formik\r\n                onSubmit={handleFormSubmit}\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}>\r\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <TextField\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      onBlur={handleBlur}\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      helperText={touched.email && errors.email}\r\n                      error={Boolean(errors.email && touched.email)}\r\n                      sx={{ mb: 3 }}\r\n                    />\r\n\r\n                    <TextField\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      label=\"Password\"\r\n                      variant=\"outlined\"\r\n                      onBlur={handleBlur}\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      helperText={touched.password && errors.password}\r\n                      error={Boolean(errors.password && touched.password)}\r\n                      sx={{ mb: 1.5 }}\r\n                    />\r\n\r\n                    <FlexBox justifyContent=\"space-between\">\r\n                      <FlexBox alignItems=\"center\" gap={1}>\r\n                        <Checkbox\r\n                          size=\"small\"\r\n                          name=\"remember\"\r\n                          onChange={handleChange}\r\n                          checked={values.remember}\r\n                          sx={{ padding: 0 }}\r\n                        />\r\n\r\n                        <Paragraph>Remember Me</Paragraph>\r\n                      </FlexBox>\r\n\r\n                      <NavLink\r\n                        to=\"/session/forgot-password\"\r\n                        style={{ color: theme.palette.primary.main }}>\r\n                        Forgot password?\r\n                      </NavLink>\r\n                    </FlexBox>\r\n\r\n                    <LoadingButton\r\n                      type=\"submit\"\r\n                      color=\"primary\"\r\n                      loading={loading}\r\n                      variant=\"contained\"\r\n                      sx={{ my: 2 }}>\r\n                      Login\r\n                    </LoadingButton>\r\n\r\n                    <Paragraph>\r\n                      Don't have an account?\r\n                      <NavLink\r\n                        to=\"/session/signup\"\r\n                        style={{ color: theme.palette.primary.main, marginLeft: 5 }}>\r\n                        Register\r\n                      </NavLink>\r\n                    </Paragraph>\r\n                  </form>\r\n                )}\r\n              </Formik>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </FirebaseRoot>\r\n  );\r\n}\r\n"],"names":["DividerRoot","styled","Box","_ref","theme","textAlign","position","height","left","zIndex","top","content","width","backgroundColor","palette","divider","background","padding","color","text","secondary","MatxDivider","_ref2","sx","_jsx","children","GoogleButton","Button","boxShadow","shadows","FlexBox","display","Logo","gap","alignItems","fontSize","lineHeight","fontWeight","FirebaseRoot","justifyContent","minHeight","maxWidth","margin","flexDirection","backgroundSize","breakpoints","down","minWidth","marginBottom","paddingLeft","borderRadius","error","main","initialValues","email","password","remember","validationSchema","Yup","shape","min","required","FirebaseLogin","useTheme","navigate","useNavigate","state","useLocation","enqueueSnackbar","useSnackbar","loading","setLoading","useState","signInWithEmail","signInWithGoogle","useAuth","Card","className","_jsxs","Grid","container","item","sm","xs","MatxLogo","Span","flexGrow","href","target","rel","src","alt","px","pt","fullWidth","variant","onClick","async","e","startIcon","mt","p","Formik","onSubmit","values","from","message","_ref3","errors","touched","handleChange","handleBlur","handleSubmit","TextField","size","type","name","label","onBlur","value","onChange","helperText","Boolean","mb","Checkbox","checked","Paragraph","NavLink","to","style","primary","LoadingButton","my","marginLeft"],"sourceRoot":""}